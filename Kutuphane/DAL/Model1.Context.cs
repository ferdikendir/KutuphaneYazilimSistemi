//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kutuphane.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KutuphaneEntities2 : DbContext
    {
        public KutuphaneEntities2()
            : base("name=KutuphaneEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bolum> Bolums { get; set; }
        public virtual DbSet<Fakulte> Fakultes { get; set; }
        public virtual DbSet<Kitap> Kitaps { get; set; }
        public virtual DbSet<KutuphaneBolum> KutuphaneBolums { get; set; }
        public virtual DbSet<Ogrenci> Ogrencis { get; set; }
        public virtual DbSet<Personel> Personels { get; set; }
        public virtual DbSet<Rapor> Rapors { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tur> Turs { get; set; }
        public virtual DbSet<YayinEvi> YayinEvis { get; set; }
        public virtual DbSet<Yazar> Yazars { get; set; }
    
        public virtual int raporEkle(string gerekce, string personel, Nullable<System.DateTime> tarih, string konu)
        {
            var gerekceParameter = gerekce != null ?
                new ObjectParameter("gerekce", gerekce) :
                new ObjectParameter("gerekce", typeof(string));
    
            var personelParameter = personel != null ?
                new ObjectParameter("personel", personel) :
                new ObjectParameter("personel", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("tarih", tarih) :
                new ObjectParameter("tarih", typeof(System.DateTime));
    
            var konuParameter = konu != null ?
                new ObjectParameter("konu", konu) :
                new ObjectParameter("konu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("raporEkle", gerekceParameter, personelParameter, tarihParameter, konuParameter);
        }
    }
}
